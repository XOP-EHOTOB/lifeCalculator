{"version":3,"sources":["panels/Home.js","App.js","index.js"],"names":["Home","id","fetchedUser","go","useState","Date","maxDate","pcModule","setPcModule","smockModule","setSmockModule","pc","useRef","smock","useEffect","console","log","bdate","split","align","top","min","day","month","year","max","getDay","getMonth","getFullYear","defaultValue","onDateChange","v","dayPlaceholder","monthPlaceholder","yearPlaceholder","getRef","onChange","current","checked","type","stretched","size","mode","App","activePanel","setActivePanel","setUser","popout","setPopout","a","bridge","send","user","subscribe","detail","data","schemeAttribute","document","createAttribute","value","scheme","body","attributes","setNamedItem","fetchData","e","currentTarget","dataset","to","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.87348f39.chunk.js","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Panel, PanelHeader, DatePicker, Group, Checkbox, FormItem, Input, Div, Button, Text, ScreenSpinner } from '@vkontakte/vkui';\n\nconst Home = ({ id, go, fetchedUser }) => {\n\tconst [maxDate, setMaxDate] = useState(new Date())\n\tconst [pcModule, setPcModule] = useState(false)\n\tconst [smockModule, setSmockModule] = useState(false)\n\n\tconst pc = useRef(false)\n\tconst smock = useRef(false)\n\n\n\tuseEffect(() => {\n\t\tconsole.log(fetchedUser);\n\t\tconsole.log(pcModule);\n\n\t\tif (fetchedUser) {\n\t\t\tconsole.log(fetchedUser.bdate.split('.')[0]);\n\t\t}\n\t}, [fetchedUser])\n\n\tif (!fetchedUser) return (\n\t\t<Panel id={id}>\n\t\t\t<ScreenSpinner />\n\t\t</Panel>\n\t)\n\n\treturn (\n\t\t<Panel id={id}>\n\t\t\t<PanelHeader>Главная</PanelHeader>\n\t\t\t<Group>\n\t\t\t\t<Div>\n\t\t\t\t\t<Text align='center'>Введите точную дату своего рождения, заполните дополнительную информацию и жмите \"Вычислить\"!</Text>\n\t\t\t\t</Div>\n\t\t\t\n\t\t\t\t<FormItem top=\"Ваша дата рождения\">\n        \t\t\t<DatePicker\n        \t\t \t\tmin={{ day: 1, month: 1, year: 1901 }}\n        \t\t \t\tmax={{ day: maxDate.getDay(), month: maxDate.getMonth() + 1, year: maxDate.getFullYear()}}\n\n\t\t\t\t\t\tdefaultValue={{ \n\t\t\t\t\t\t\tday: fetchedUser.bdate ? +fetchedUser.bdate.split('.')[0] : 0, \n\t\t\t\t\t\t\tmonth: fetchedUser.bdate ? +fetchedUser.bdate.split('.')[1] : 0, \n\t\t\t\t\t\t\tyear: fetchedUser.bdate ? +fetchedUser.bdate.split('.')[2] ? +fetchedUser.bdate.split('.')[2] : 1 : 1 }}\n\t\t\t\t \t\tonDateChange={(v) => {\n\t\t\t\t\t  \t\tconsole.log(v);\n\t\t\t\t \t\t}}\n        \t\t \t\tdayPlaceholder=\"ДД\"\n        \t\t \t\tmonthPlaceholder=\"ММММ\"\n        \t\t \t\tyearPlaceholder=\"ГГГГ\"\n        \t\t\t/>\n      \t\t\t</FormItem>\n\n\t\t\t\t<Checkbox\n\t\t\t\t\tgetRef={pc}\n\t\t\t\t\tonChange={() => setPcModule(pc.current.checked)}>\n\t\t\t\t\t\tЯ провожу время за компьютером\n\t\t\t\t</Checkbox>\n\t\t\t\t{pcModule ?  \n\t\t\t\t<div>\n\t\t\t\t\t<FormItem top=\"Сколько лет вы пользуетесь пк\">\n        \t\t\t\t<Input type=\"number\" defaultValue=\"0\" />\n      \t\t\t\t</FormItem>\n\t\t\t\t\t<FormItem top=\"В среднем каждый день (часов)\">\n\t\t\t\t\t  <Input type=\"number\" defaultValue=\"0\" />\n\t\t\t\t\t</FormItem>\n\t\t\t\t</div>\n\t\t\t\t: null}\n\n\t\t\t\t<Checkbox\n\t\t\t\t\tgetRef={smock}\n\t\t\t\t\tonChange={() => setSmockModule(smock.current.checked)}>\n\t\t\t\t\t\tЯ курю\n\t\t\t\t</Checkbox>\n\t\t\t\t{smockModule ?  \n\t\t\t\t<div>\n\t\t\t\t\t<FormItem top=\"Сколько лет вы курите\">\n        \t\t\t\t<Input type=\"number\" defaultValue=\"0\" />\n      \t\t\t\t</FormItem>\n\t\t\t\t\t<FormItem top=\"В среднем каждый день (шт)\">\n\t\t\t\t\t  <Input type=\"number\" defaultValue=\"0\" />\n\t\t\t\t\t</FormItem>\n\t\t\t\t\t<FormItem top=\"Цена пачки сигорет (руб.)\">\n\t\t\t\t\t  <Input type=\"number\" defaultValue=\"0\" />\n\t\t\t\t\t</FormItem>\n\t\t\t\t</div>\n\t\t\t\t: null}\n\n\t\t\t\t<Div align='center'>\n\t\t\t\t\t<Button \n\t\t\t\t\t\tstretched\n\t\t\t\t\t\talign='center'\n\t\t\t\t\t\tsize='l'\n\t\t\t\t\t\tmode='outline'>\n\t\t\t\t\t\t\tРасчитать\n\t\t\t\t\t</Button>\n\t\t\t\t</Div>\n\t\t\t</Group>\n\t\t</Panel>\n\t)\n};\n\nHome.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n\tfetchedUser: PropTypes.shape({\n\t\tphoto_200: PropTypes.string,\n\t\tfirst_name: PropTypes.string,\n\t\tlast_name: PropTypes.string,\n\t\tcity: PropTypes.shape({\n\t\t\ttitle: PropTypes.string,\n\t\t}),\n\t}),\n};\n\nexport default Home;\n","import React, { useState, useEffect } from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport { View, ScreenSpinner, AdaptivityProvider, AppRoot } from '@vkontakte/vkui';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Home from './panels/Home';\n\nconst App = () => {\n\tconst [activePanel, setActivePanel] = useState('home');\n\tconst [fetchedUser, setUser] = useState(null);\n\tconst [popout, setPopout] = useState(<ScreenSpinner size='large' />);\n\n\tuseEffect(() => {\n\t\tbridge.subscribe(({ detail: { type, data }}) => {\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\n\t\t\t\tconst schemeAttribute = document.createAttribute('scheme');\n\t\t\t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n\t\t\t\tdocument.body.attributes.setNamedItem(schemeAttribute);\n\t\t\t}\n\t\t});\n\t\tasync function fetchData() {\n\t\t\tconst user = await bridge.send('VKWebAppGetUserInfo');\n\t\t\tsetUser(user);\n\t\t\tsetPopout(null);\n\t\t}\n\t\tfetchData();\n\t}, []);\n\n\tconst go = e => {\n\t\tsetActivePanel(e.currentTarget.dataset.to);\n\t};\n\n\treturn (\n\t\t<AdaptivityProvider>\n\t\t\t<AppRoot>\n\t\t\t\t<View activePanel={activePanel} popout={popout}>\n\t\t\t\t\t<Home id='home' fetchedUser={fetchedUser} go={go} />\n\t\t\t\t</View>\n\t\t\t</AppRoot>\n\t\t</AdaptivityProvider>\n\t);\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nif (process.env.NODE_ENV === \"development\") {\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n}\n"],"sourceRoot":""}